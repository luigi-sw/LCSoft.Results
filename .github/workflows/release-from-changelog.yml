name: Release from Changelog

on:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md

jobs:
  release:
    name: Create Release from CHANGELOG
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract latest version and changelog section
        id: changelog
        run: |
          # Extract latest version number (e.g., 1.2.0)
          VERSION=$(grep -m1 -Po '^## \[\K[^\]]+' CHANGELOG.md)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

          # Extract all lines before the first '## [' (intro section)
          awk '!/^## \[/' CHANGELOG.md > _intro.txt

          # Extract changelog notes for the latest version
          awk "/## \[$VERSION\]/,/^## \[/" CHANGELOG.md | head -n -1 | tail -n +2 > _section.txt

          # Combine everything into final body
          {
            echo "## 📦 Release Notes"
            echo ""
            cat _intro.txt
            echo ""
            cat _section.txt
            echo ""
            echo "---"
            echo "[Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)"
          } > final_body.txt

          echo "BODY<<EOF" >> $GITHUB_OUTPUT
          cat final_body.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tagcheck
        run: |
          TAG="v${{ steps.changelog.outputs.VERSION }}"
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG"; then
            echo "Tag $TAG already exists. Skipping release."
            echo "EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Git Tag
        if: steps.tagcheck.outputs.EXISTS == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag -a "v${{ steps.changelog.outputs.VERSION }}" -m "Release v${{ steps.changelog.outputs.VERSION }}"
          git push origin "v${{ steps.changelog.outputs.VERSION }}"

      - name: Create GitHub Release
        if: steps.tagcheck.outputs.EXISTS == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.changelog.outputs.VERSION }}
          name: v${{ steps.changelog.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.BODY }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}